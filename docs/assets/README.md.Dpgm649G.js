import{_ as t,c as o,o as a,a0 as i}from"./chunks/framework.CxIJk_Sz.js";const p=JSON.parse('{"title":"Tutorial Website","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md"}'),s={name:"README.md"};function n(r,e,d,l,h,c){return a(),o("div",null,e[0]||(e[0]=[i('<h1 id="tutorial-website" tabindex="-1">Tutorial Website <a class="header-anchor" href="#tutorial-website" aria-label="Permalink to &quot;Tutorial Website&quot;">​</a></h1><p>This folder holds the sources for the tutorial website.</p><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h2><p>You will need <code>npm</code> and <code>node.js</code> in order to build the website. Once you have them installed, type <code>npm install</code> to fetch dependencies. Then you can use the following scripts:</p><ul><li><code>npm start</code>: Run a development server with hot reloading, so you can test your changes to the site.</li><li><code>npm run build</code>: Build a deployable version of the site in the <code>dist</code> folder. Note that the <code>dist</code> folder is not version controlled. You will need to deploy the site after running <code>npm run build</code>.</li></ul><h2 id="a-crash-course-in-vitepress" tabindex="-1">A Crash Course in VitePress <a class="header-anchor" href="#a-crash-course-in-vitepress" aria-label="Permalink to &quot;A Crash Course in VitePress&quot;">​</a></h2><p>This site uses VitePress, which is probably the easiest markdown-based site generator within the node.js ecosystem. There is a file called <code>index.md</code> that will be compiled into the main landing page. The <code>actions</code> section of the metadata at the top of that file will appear as buttons on the landing page. Typically, you&#39;ll want these buttons to link to other markdown files.</p><p><code>.vitepress/config.mts</code> contains a <code>sidebar</code>, which will show any time that a page other than the landing page is showing. This provides a clean facility for having a navigation menu on the left side as visitors work through the tutorial.</p><p>Other than that, The only files of interest are the various markdown files that are referenced by <code>index.md</code> and/or <code>config.mts</code>. In those files, you can use standard markdown, and also some helpful plugins like code blocks, LaTeX math, Mermaid diagrams, GitHub tables, and emojis.</p>',9)]))}const m=t(s,[["render",n]]);export{p as __pageData,m as default};
